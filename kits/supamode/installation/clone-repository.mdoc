---
status: "published"
title: "Clone the Supamode Repository"
label: "Clone the Repository"
order: 3
description: "Clone the Supamode repository to your local machine."
---

## Prerequisites

- Node.js 20.x or later
- Docker
- Pnpm
- Supabase account (optional for local development)

## Install Pnpm

If you don't have pnpm installed, you can install it using the following command:

```bash
# Install pnpm
npm i -g pnpm
```

## Automatic Setup

If this is the first-time setup, you can use the `npx create-supamode-app` command to automatically setup a new Supamode application.

You can use the `npx create-supamode-app` command to automatically setup a new Supamode application.

```bash
npx create-supamode-app
```

NB: If your don't have SSH configured with Github - the command won't work. Please refer to the [manual setup](#manual-setup) below.

## Setup dependencies

Next, you need to install the dependencies.

```bash
# Install dependencies
pnpm i
```

## Manual Setup

If you don't want to use the automatic setup or if you want to use HTTPS instead of SSH to authenticate with Github, you can clone the repository manually.

```bash
git clone https://github.com/makerkit/supamode
```

NB: please switch to HTTPS for ALL commands if you are not using SSH, not just the clone command.

Now, run the following commands to setup the project:

```bash
pnpm i
pnpm turbo gen setup
```

This will guide you through the setup process.

### Setting up the repository to pull updates

Now, remove the original `origin`:

```bash
git remote rm origin
```

Add upstream pointing to this repository so you can pull updates

```bash
git remote add upstream git@github.com:makerkit/supamode
```

Once you have your own repository, do the same but use `origin` instead of `upstream`

To pull updates (please do this daily with your morning coffee ☕️):

```bash
git pull upstream main
```

This will keep your repository up to date.

## Windows Users

**Windows Users**: place the repository near the root of your drive.

Some Windows users hit errors loading certain modules due to very long paths. To avoid this, try placing the repository near the root of your drive.

Avoid using OneDrive, as it can cause issues with Node.js.